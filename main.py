import asyncio
import storage
from storage import bot_token, chat_id, message_id, ya_token
from telegram import Bot
from telegram.error import BadRequest, RetryAfter
from api_yandex import get_current_track

bot = Bot(token=bot_token)
BACKOFF_SCHEDULE = [30, 30, 300, 900, 1800, 3600]
current_backoff_index = 0
track_change_multiplier = 1
last_track_id = None


async def edit_message():
    global track_change_multiplier, last_track_id

    track_info = await get_current_track(ya_token)
    if not track_info:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–∫–µ")
        return False, None

    current_track_id = track_info.get('id')
    duration_sec = track_info['duration'] // 1000

    if current_track_id == last_track_id:
        track_change_multiplier = min(track_change_multiplier + 1, 6)
        print(f"–¢—Ä–µ–∫ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –º–Ω–æ–∂–∏—Ç–µ–ª—å —É–≤–µ–ª–∏—á–µ–Ω –¥–æ {track_change_multiplier}")
    else:
        track_change_multiplier = 1
        last_track_id = current_track_id
        print("–û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π —Ç—Ä–µ–∫, –º–Ω–æ–∂–∏—Ç–µ–ª—å —Å–±—Ä–æ—à–µ–Ω")

    new_text = (
        f"üéµ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {track_info['title']} üéµ\n"
        f"üé§ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏: {', '.join(track_info['artists'])}\n"
        f"üîó –°—Å—ã–ª–∫–∞: {track_info['url']}\n"
    )

    try:
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=new_text
        )
        print("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
        return True, duration_sec

    except BadRequest as e:
        if "Message is not modified" in str(e):
            print("–¢—Ä–µ–∫ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
            return False, duration_sec
        elif "Message to edit not found" in str(e):
            print("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ")
            message = await bot.send_message(chat_id=chat_id, text=new_text)
            storage.message_id = message.message_id
            return True, duration_sec
        else:
            print(f"–û—à–∏–±–∫–∞ Telegram: {e}")
            return False, duration_sec

    except RetryAfter as e:
        wait_time = e.retry_after
        print(f"–û–∂–∏–¥–∞–µ–º {wait_time} —Å–µ–∫—É–Ω–¥ –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Telegram")
        await asyncio.sleep(wait_time)
        return await edit_message()


async def main():
    global current_backoff_index, track_change_multiplier
    print("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    try:
        while True:
            updated, duration = await edit_message()

            if duration:
                wait_time = (duration + 2) * track_change_multiplier
                print(f"–û–∂–∏–¥–∞–µ–º {wait_time} —Å–µ–∫—É–Ω–¥ (–º–Ω–æ–∂–∏—Ç–µ–ª—å: {track_change_multiplier})")
            else:
                wait_time = BACKOFF_SCHEDULE[current_backoff_index]
                await bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=message_id,
                    text="–£–ü–° –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç"
                )
                current_backoff_index = (current_backoff_index + 1) % len(BACKOFF_SCHEDULE)
                print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É: {wait_time} —Å–µ–∫ (—É—Ä–æ–≤–µ–Ω—å {current_backoff_index})")

            await asyncio.sleep(wait_time)

    except asyncio.CancelledError:
        print("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    finally:
        await bot.close()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–†–∞–±–æ—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")